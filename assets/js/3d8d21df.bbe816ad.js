"use strict";(self.webpackChunkwifiduck_com=self.webpackChunkwifiduck_com||[]).push([[535],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),u=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,k=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?i.createElement(k,o(o({ref:t},s),{},{components:n})):i.createElement(k,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<a;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8751:function(e,t,n){n.d(t,{Z:function(){return a}});var i=n(7294),r={borderRadius:"6px",background:"#34709d",textAlign:"center",color:"#fff",display:"inline-block",height:"2.25em",lineHeight:"2.25em",textDecoration:"none",margin:"0",padding:"0",marginRight:".5em",marginBottom:".5em",paddingLeft:"2em",paddingRight:"2em"};function a(e){var t=e.link,n=e.text,a=t.startsWith("http")?"_blank":"_self";return i.createElement("a",{href:t,target:a,style:r},n)}},1171:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=n(8751),c=["components"],l={title:"About",sidebar_position:10},u="About",s={unversionedId:"about",id:"about",title:"About",description:"WiFi Duck is an open-source tool to test keystroke injection attacks and learn about BadUSBs.",source:"@site/docs/about.md",sourceDirName:".",slug:"/about",permalink:"/docs/about",draft:!1,editUrl:"https://github.com/spacehuhn/wifiduck.com/blob/main/docs/about.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"About",sidebar_position:10},sidebar:"tutorialSidebar",next:{title:"How it works",permalink:"/docs/howitworks"}},d={},p=[{value:"Usage",id:"usage",level:2},{value:"Hardware",id:"hardware",level:2},{value:"MalDuino W",id:"malduino-w",level:3},{value:"DSTIKE WiFi Duck",id:"dstike-wifi-duck",level:3},{value:"DIY",id:"diy",level:3},{value:"Web Interface",id:"web-interface",level:2}],m={toc:p};function k(e){var t=e.components,l=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,i.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"about"},"About"),(0,a.kt)("img",{src:"/img/logo.png",width:"200",alt:"WiFi Duck Logo"}),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("p",null,"WiFi Duck is an open-source tool to test keystroke injection attacks and learn about BadUSBs.  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Easy to use and DIY-able (with ATmega32u4 & ESP8266)"),(0,a.kt)("li",{parentName:"ul"},"Connect via WiFi"),(0,a.kt)("li",{parentName:"ul"},"Save and run BadUSB scripts through a simple web interface"),(0,a.kt)("li",{parentName:"ul"},"No need to compile your scripts or copy them onto a micro SD card"),(0,a.kt)("li",{parentName:"ul"},"Great for quickly developing new scripts and testing them.")),(0,a.kt)("a",{href:"https://discord.com/invite/238wu8g"},(0,a.kt)("img",{height:"36",style:{border:0,height:"36px"},src:"/img/discord_button.png",alt:"Discord Server button"})),"\xa0",(0,a.kt)("a",{href:"https://ko-fi.com/G2G75FA4V",target:"_blank"},(0,a.kt)("img",{height:"36",style:{border:0,height:"36px"},src:"/img/kofi_button.png",border:"0",alt:"Buy Me a Coffee at ko-fi.com"})),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Using WiFi Duck Usage Showcase",src:n(555).Z,width:"600",height:"338"})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Plug WiFi Duck into the target computer"),(0,a.kt)("li",{parentName:"ol"},"Connect to WiFi (SSID: ",(0,a.kt)("inlineCode",{parentName:"li"},"wifiduck"),", Password: ",(0,a.kt)("inlineCode",{parentName:"li"},"wifiduck"),")"),(0,a.kt)("li",{parentName:"ol"},"Open web interface (URL: ",(0,a.kt)("inlineCode",{parentName:"li"},"192.168.4.1"),")"),(0,a.kt)("li",{parentName:"ol"},"Create, edit, and run your BadUSB scripts")),(0,a.kt)("h2",{id:"hardware"},"Hardware"),(0,a.kt)("h3",{id:"malduino-w"},"MalDuino W"),(0,a.kt)("img",{src:"/img/malw.png",width:"300",alt:"MalDuino W"}),(0,a.kt)("p",null,"Encased and inconspicuous looking BadUSB by Maltronics.",(0,a.kt)("br",{parentName:"p"}),"\n","Based on the WiFi Duck firmware and works plug and play."),(0,a.kt)(o.Z,{link:"https://maltronics.com/collections/malduinos/products/malduino-w",text:"Buy Now",mdxType:"LinkButton"}),(0,a.kt)("h3",{id:"dstike-wifi-duck"},"DSTIKE WiFi Duck"),(0,a.kt)("img",{src:"/img/dstike.png",width:"300",alt:"DSTIKE WiFi Duck"}),(0,a.kt)("p",null,"A development board designed for WiFi Duck by Travis Lin."),(0,a.kt)(o.Z,{link:"https://dstike.com/collections/frontpage/products/dstike-wifi-duck",text:"Buy Now",mdxType:"LinkButton"}),(0,a.kt)("h3",{id:"diy"},"DIY"),(0,a.kt)("img",{src:"/img/pcbs_soldered.jpg",alt:"DIY WiFi Duck"}),(0,a.kt)("p",null,"You can also build a WiFi Duck yourself!",(0,a.kt)("br",{parentName:"p"}),"\n","You will need an ATmega32u4 and ESP8266 development board.\nThe ATmega acts as a USB keyboard, and the ESP8266 hosts the web interface.  "),(0,a.kt)(o.Z,{link:"category/diy-hardware/",text:"Start Building",mdxType:"LinkButton"}),(0,a.kt)("h2",{id:"web-interface"},"Web Interface"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Screenshot of WiFi Duck Web Interface",src:n(3016).Z,width:"1920",height:"1080"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Screenshot of WiFi Duck Editor",src:n(4403).Z,width:"1520",height:"1080"})))}k.isMDXComponent=!0},4403:function(e,t,n){t.Z=n.p+"assets/images/editor-6fc4870c2e7056891b168ff4febd6700.jpg"},555:function(e,t,n){t.Z=n.p+"assets/images/showcase-d69a301838d6a1ad97226d8c9a8c8237.gif"},3016:function(e,t,n){t.Z=n.p+"assets/images/webinterface-855bc715ae649739205325f88cd19f35.jpg"}}]);